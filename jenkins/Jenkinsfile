pipeline {
  agent {
		label 'docker-build'
	}
  environment {
    NX_BRANCH = env.BRANCH_NAME.replace('PR-', '');
    BASE_SHA = 'HEAD~1';
    NPMJS_TOKEN = credentials('jenkins-npmjs-token');
    NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
  }
  stages {
    stage('Prepare') {
      when { anyOf { branch 'master'; branch 'develop'; branch pattern: "^(hotfix/.*|release/.*|publish_.*)", comparator: 'REGEXP' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps {
        script {
          env.BASE_SHA = env.CHANGE_ID ? 'origin/${env.CHANGE_TARGET}' : 'HEAD~1'
          sh "npm ci"
        }
      }
    }
    stage('Lint') {
      when { anyOf { branch 'master'; branch 'develop'; branch pattern: "^(hotfix/.*|release/.*|publish_.*)", comparator: 'REGEXP' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps {
        script {
          sh "npx nx workspace-lint"
          sh "npx nx affected --base=${BASE_SHA} --target=lint --parallel=3"
        }
      }
    }
    stage('Test') {
      when { anyOf { branch 'master'; branch 'develop'; branch pattern: "^(hotfix/.*|release/.*|publish_.*)", comparator: 'REGEXP' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps {
        script {
          sh "npx nx affected --base=${BASE_SHA} --target=test --parallel=3"
        }
      }
    }
    stage('Build') {
      when { anyOf { branch 'master'; branch 'develop'; branch pattern: "^(hotfix/.*|release/.*)", comparator: 'REGEXP' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps {
        script {
          sh "npx nx affected --base=${BASE_SHA} --target=build --parallel=3"
        }
      }
    }
    stage('Deploy - Docs') {
      when { anyOf { branch 'deploy-docs' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps {
        script {
          sh "npm run docs:build"
        }
      }
    }
    stage('Publish - Lib'){
      when { anyOf { branch pattern: "^(publish_.*)", comparator: 'REGEXP' } }
      agent {
        dockerfile {
          filename 'Dockerfile.build'
          dir 'jenkins'
          reuseNode true
        }
      }
      steps{
        script {
          branchName = "${BRANCH_NAME}"
          version = branchName.substring(branchName.indexOf("_"))
          version = version.replace("_", "")
          sh 'echo "//registry.npmjs.org/:_authToken=${NPMJS_TOKEN}" >> ~/.npmrc'
          sh "npx nx affected --base=HEAD~1 --target=publish --ver=${version} --tag=latest --parallel=3"
        }
      }
    }
  }
}
